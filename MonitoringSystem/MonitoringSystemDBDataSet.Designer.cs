//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace MonitoringSystem {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("MonitoringSystemDBDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class MonitoringSystemDBDataSet : global::System.Data.DataSet {
        
        private МКДDataTable tableМКД;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public MonitoringSystemDBDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected MonitoringSystemDBDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["МКД"] != null)) {
                    base.Tables.Add(new МКДDataTable(ds.Tables["МКД"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public МКДDataTable МКД {
            get {
                return this.tableМКД;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            MonitoringSystemDBDataSet cln = ((MonitoringSystemDBDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["МКД"] != null)) {
                    base.Tables.Add(new МКДDataTable(ds.Tables["МКД"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableМКД = ((МКДDataTable)(base.Tables["МКД"]));
            if ((initTable == true)) {
                if ((this.tableМКД != null)) {
                    this.tableМКД.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitClass() {
            this.DataSetName = "MonitoringSystemDBDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/MonitoringSystemDBDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableМКД = new МКДDataTable();
            base.Tables.Add(this.tableМКД);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeМКД() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            MonitoringSystemDBDataSet ds = new MonitoringSystemDBDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void МКДRowChangeEventHandler(object sender, МКДRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class МКДDataTable : global::System.Data.TypedTableBase<МКДRow> {
            
            private global::System.Data.DataColumn columnкод_МКД;
            
            private global::System.Data.DataColumn columnадрес;
            
            private global::System.Data.DataColumn columnкол_жил_пом;
            
            private global::System.Data.DataColumn columnсостояние_МКД;
            
            private global::System.Data.DataColumn columnдетская_площадка;
            
            private global::System.Data.DataColumn columnспортивная_площадка;
            
            private global::System.Data.DataColumn columnтип_управления;
            
            private global::System.Data.DataColumn columnОКТМО;
            
            private global::System.Data.DataColumn columnУК;
            
            private global::System.Data.DataColumn columnкадастровый_номер;
            
            private global::System.Data.DataColumn columnгод_постройки;
            
            private global::System.Data.DataColumn columnгод_ВДВУ;
            
            private global::System.Data.DataColumn columnтип_дома;
            
            private global::System.Data.DataColumn columnкол_этажей;
            
            private global::System.Data.DataColumn columnкол_подъездов;
            
            private global::System.Data.DataColumn columnкол_лифтов;
            
            private global::System.Data.DataColumn columnплощадь_жил_пом;
            
            private global::System.Data.DataColumn columnплощадь_нежил_пом;
            
            private global::System.Data.DataColumn columnплощадь_ПВСОИ;
            
            private global::System.Data.DataColumn columnплощадь_зем_участка;
            
            private global::System.Data.DataColumn columnфундамент;
            
            private global::System.Data.DataColumn columnтип_перекрытий;
            
            private global::System.Data.DataColumn columnмат_несущих_стен;
            
            private global::System.Data.DataColumn columnплощадь_подвала;
            
            private global::System.Data.DataColumn columnтип_мусоропровода;
            
            private global::System.Data.DataColumn columnвентиляция;
            
            private global::System.Data.DataColumn columnводоотведение;
            
            private global::System.Data.DataColumn columnсистема_водостоков;
            
            private global::System.Data.DataColumn columnгазоснабжение;
            
            private global::System.Data.DataColumn columnгорячее_водоснаб;
            
            private global::System.Data.DataColumn columnхолодное_водоснаб;
            
            private global::System.Data.DataColumn columnтеплоснабжение;
            
            private global::System.Data.DataColumn columnэлектроснабжение;
            
            private global::System.Data.DataColumn columnмат_отделки_фасада;
            
            private global::System.Data.DataColumn columnформа_крыши;
            
            private global::System.Data.DataColumn columnутепляющие_слои_чердачных_перекрытий;
            
            private global::System.Data.DataColumn columnмат_окон;
            
            private global::System.Data.DataColumn columnмат_сети_отопления;
            
            private global::System.Data.DataColumn columnмат_теплоизоляции_сети;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public МКДDataTable() {
                this.TableName = "МКД";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal МКДDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected МКДDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn код_МКДColumn {
                get {
                    return this.columnкод_МКД;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn адресColumn {
                get {
                    return this.columnадрес;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn кол_жил_помColumn {
                get {
                    return this.columnкол_жил_пом;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn состояние_МКДColumn {
                get {
                    return this.columnсостояние_МКД;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn детская_площадкаColumn {
                get {
                    return this.columnдетская_площадка;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn спортивная_площадкаColumn {
                get {
                    return this.columnспортивная_площадка;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn тип_управленияColumn {
                get {
                    return this.columnтип_управления;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ОКТМОColumn {
                get {
                    return this.columnОКТМО;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn УКColumn {
                get {
                    return this.columnУК;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn кадастровый_номерColumn {
                get {
                    return this.columnкадастровый_номер;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn год_постройкиColumn {
                get {
                    return this.columnгод_постройки;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn год_ВДВУColumn {
                get {
                    return this.columnгод_ВДВУ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn тип_домаColumn {
                get {
                    return this.columnтип_дома;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn кол_этажейColumn {
                get {
                    return this.columnкол_этажей;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn кол_подъездовColumn {
                get {
                    return this.columnкол_подъездов;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn кол_лифтовColumn {
                get {
                    return this.columnкол_лифтов;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn площадь_жил_помColumn {
                get {
                    return this.columnплощадь_жил_пом;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn площадь_нежил_помColumn {
                get {
                    return this.columnплощадь_нежил_пом;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn площадь_ПВСОИColumn {
                get {
                    return this.columnплощадь_ПВСОИ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn площадь_зем_участкаColumn {
                get {
                    return this.columnплощадь_зем_участка;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn фундаментColumn {
                get {
                    return this.columnфундамент;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn тип_перекрытийColumn {
                get {
                    return this.columnтип_перекрытий;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn мат_несущих_стенColumn {
                get {
                    return this.columnмат_несущих_стен;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn площадь_подвалаColumn {
                get {
                    return this.columnплощадь_подвала;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn тип_мусоропроводаColumn {
                get {
                    return this.columnтип_мусоропровода;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn вентиляцияColumn {
                get {
                    return this.columnвентиляция;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn водоотведениеColumn {
                get {
                    return this.columnводоотведение;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn система_водостоковColumn {
                get {
                    return this.columnсистема_водостоков;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn газоснабжениеColumn {
                get {
                    return this.columnгазоснабжение;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn горячее_водоснабColumn {
                get {
                    return this.columnгорячее_водоснаб;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn холодное_водоснабColumn {
                get {
                    return this.columnхолодное_водоснаб;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn теплоснабжениеColumn {
                get {
                    return this.columnтеплоснабжение;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn электроснабжениеColumn {
                get {
                    return this.columnэлектроснабжение;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn мат_отделки_фасадаColumn {
                get {
                    return this.columnмат_отделки_фасада;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn форма_крышиColumn {
                get {
                    return this.columnформа_крыши;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn утепляющие_слои_чердачных_перекрытийColumn {
                get {
                    return this.columnутепляющие_слои_чердачных_перекрытий;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn мат_оконColumn {
                get {
                    return this.columnмат_окон;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn мат_сети_отопленияColumn {
                get {
                    return this.columnмат_сети_отопления;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn мат_теплоизоляции_сетиColumn {
                get {
                    return this.columnмат_теплоизоляции_сети;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public МКДRow this[int index] {
                get {
                    return ((МКДRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event МКДRowChangeEventHandler МКДRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event МКДRowChangeEventHandler МКДRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event МКДRowChangeEventHandler МКДRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event МКДRowChangeEventHandler МКДRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddМКДRow(МКДRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public МКДRow AddМКДRow(
                        string адрес, 
                        short кол_жил_пом, 
                        int состояние_МКД, 
                        string детская_площадка, 
                        string спортивная_площадка, 
                        int тип_управления, 
                        string ОКТМО, 
                        int УК, 
                        string кадастровый_номер, 
                        string год_постройки, 
                        string год_ВДВУ, 
                        string тип_дома, 
                        byte кол_этажей, 
                        byte кол_подъездов, 
                        byte кол_лифтов, 
                        decimal площадь_жил_пом, 
                        decimal площадь_нежил_пом, 
                        decimal площадь_ПВСОИ, 
                        decimal площадь_зем_участка, 
                        string фундамент, 
                        string тип_перекрытий, 
                        string мат_несущих_стен, 
                        decimal площадь_подвала, 
                        string тип_мусоропровода, 
                        string вентиляция, 
                        string водоотведение, 
                        string система_водостоков, 
                        string газоснабжение, 
                        string горячее_водоснаб, 
                        string холодное_водоснаб, 
                        string теплоснабжение, 
                        string электроснабжение, 
                        string мат_отделки_фасада, 
                        string форма_крыши, 
                        string утепляющие_слои_чердачных_перекрытий, 
                        string мат_окон, 
                        string мат_сети_отопления, 
                        string мат_теплоизоляции_сети) {
                МКДRow rowМКДRow = ((МКДRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        адрес,
                        кол_жил_пом,
                        состояние_МКД,
                        детская_площадка,
                        спортивная_площадка,
                        тип_управления,
                        ОКТМО,
                        УК,
                        кадастровый_номер,
                        год_постройки,
                        год_ВДВУ,
                        тип_дома,
                        кол_этажей,
                        кол_подъездов,
                        кол_лифтов,
                        площадь_жил_пом,
                        площадь_нежил_пом,
                        площадь_ПВСОИ,
                        площадь_зем_участка,
                        фундамент,
                        тип_перекрытий,
                        мат_несущих_стен,
                        площадь_подвала,
                        тип_мусоропровода,
                        вентиляция,
                        водоотведение,
                        система_водостоков,
                        газоснабжение,
                        горячее_водоснаб,
                        холодное_водоснаб,
                        теплоснабжение,
                        электроснабжение,
                        мат_отделки_фасада,
                        форма_крыши,
                        утепляющие_слои_чердачных_перекрытий,
                        мат_окон,
                        мат_сети_отопления,
                        мат_теплоизоляции_сети};
                rowМКДRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowМКДRow);
                return rowМКДRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public МКДRow FindByкод_МКД(int код_МКД) {
                return ((МКДRow)(this.Rows.Find(new object[] {
                            код_МКД})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                МКДDataTable cln = ((МКДDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new МКДDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnкод_МКД = base.Columns["код_МКД"];
                this.columnадрес = base.Columns["адрес"];
                this.columnкол_жил_пом = base.Columns["кол_жил_пом"];
                this.columnсостояние_МКД = base.Columns["состояние_МКД"];
                this.columnдетская_площадка = base.Columns["детская_площадка"];
                this.columnспортивная_площадка = base.Columns["спортивная_площадка"];
                this.columnтип_управления = base.Columns["тип_управления"];
                this.columnОКТМО = base.Columns["ОКТМО"];
                this.columnУК = base.Columns["УК"];
                this.columnкадастровый_номер = base.Columns["кадастровый_номер"];
                this.columnгод_постройки = base.Columns["год_постройки"];
                this.columnгод_ВДВУ = base.Columns["год_ВДВУ"];
                this.columnтип_дома = base.Columns["тип_дома"];
                this.columnкол_этажей = base.Columns["кол_этажей"];
                this.columnкол_подъездов = base.Columns["кол_подъездов"];
                this.columnкол_лифтов = base.Columns["кол_лифтов"];
                this.columnплощадь_жил_пом = base.Columns["площадь_жил_пом"];
                this.columnплощадь_нежил_пом = base.Columns["площадь_нежил_пом"];
                this.columnплощадь_ПВСОИ = base.Columns["площадь_ПВСОИ"];
                this.columnплощадь_зем_участка = base.Columns["площадь_зем_участка"];
                this.columnфундамент = base.Columns["фундамент"];
                this.columnтип_перекрытий = base.Columns["тип_перекрытий"];
                this.columnмат_несущих_стен = base.Columns["мат_несущих_стен"];
                this.columnплощадь_подвала = base.Columns["площадь_подвала"];
                this.columnтип_мусоропровода = base.Columns["тип_мусоропровода"];
                this.columnвентиляция = base.Columns["вентиляция"];
                this.columnводоотведение = base.Columns["водоотведение"];
                this.columnсистема_водостоков = base.Columns["система_водостоков"];
                this.columnгазоснабжение = base.Columns["газоснабжение"];
                this.columnгорячее_водоснаб = base.Columns["горячее_водоснаб"];
                this.columnхолодное_водоснаб = base.Columns["холодное_водоснаб"];
                this.columnтеплоснабжение = base.Columns["теплоснабжение"];
                this.columnэлектроснабжение = base.Columns["электроснабжение"];
                this.columnмат_отделки_фасада = base.Columns["мат_отделки_фасада"];
                this.columnформа_крыши = base.Columns["форма_крыши"];
                this.columnутепляющие_слои_чердачных_перекрытий = base.Columns["утепляющие_слои_чердачных_перекрытий"];
                this.columnмат_окон = base.Columns["мат_окон"];
                this.columnмат_сети_отопления = base.Columns["мат_сети_отопления"];
                this.columnмат_теплоизоляции_сети = base.Columns["мат_теплоизоляции_сети"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnкод_МКД = new global::System.Data.DataColumn("код_МКД", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnкод_МКД);
                this.columnадрес = new global::System.Data.DataColumn("адрес", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnадрес);
                this.columnкол_жил_пом = new global::System.Data.DataColumn("кол_жил_пом", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnкол_жил_пом);
                this.columnсостояние_МКД = new global::System.Data.DataColumn("состояние_МКД", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnсостояние_МКД);
                this.columnдетская_площадка = new global::System.Data.DataColumn("детская_площадка", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnдетская_площадка);
                this.columnспортивная_площадка = new global::System.Data.DataColumn("спортивная_площадка", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnспортивная_площадка);
                this.columnтип_управления = new global::System.Data.DataColumn("тип_управления", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnтип_управления);
                this.columnОКТМО = new global::System.Data.DataColumn("ОКТМО", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОКТМО);
                this.columnУК = new global::System.Data.DataColumn("УК", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnУК);
                this.columnкадастровый_номер = new global::System.Data.DataColumn("кадастровый_номер", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnкадастровый_номер);
                this.columnгод_постройки = new global::System.Data.DataColumn("год_постройки", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnгод_постройки);
                this.columnгод_ВДВУ = new global::System.Data.DataColumn("год_ВДВУ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnгод_ВДВУ);
                this.columnтип_дома = new global::System.Data.DataColumn("тип_дома", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnтип_дома);
                this.columnкол_этажей = new global::System.Data.DataColumn("кол_этажей", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnкол_этажей);
                this.columnкол_подъездов = new global::System.Data.DataColumn("кол_подъездов", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnкол_подъездов);
                this.columnкол_лифтов = new global::System.Data.DataColumn("кол_лифтов", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnкол_лифтов);
                this.columnплощадь_жил_пом = new global::System.Data.DataColumn("площадь_жил_пом", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnплощадь_жил_пом);
                this.columnплощадь_нежил_пом = new global::System.Data.DataColumn("площадь_нежил_пом", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnплощадь_нежил_пом);
                this.columnплощадь_ПВСОИ = new global::System.Data.DataColumn("площадь_ПВСОИ", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnплощадь_ПВСОИ);
                this.columnплощадь_зем_участка = new global::System.Data.DataColumn("площадь_зем_участка", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnплощадь_зем_участка);
                this.columnфундамент = new global::System.Data.DataColumn("фундамент", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnфундамент);
                this.columnтип_перекрытий = new global::System.Data.DataColumn("тип_перекрытий", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnтип_перекрытий);
                this.columnмат_несущих_стен = new global::System.Data.DataColumn("мат_несущих_стен", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnмат_несущих_стен);
                this.columnплощадь_подвала = new global::System.Data.DataColumn("площадь_подвала", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnплощадь_подвала);
                this.columnтип_мусоропровода = new global::System.Data.DataColumn("тип_мусоропровода", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnтип_мусоропровода);
                this.columnвентиляция = new global::System.Data.DataColumn("вентиляция", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnвентиляция);
                this.columnводоотведение = new global::System.Data.DataColumn("водоотведение", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnводоотведение);
                this.columnсистема_водостоков = new global::System.Data.DataColumn("система_водостоков", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnсистема_водостоков);
                this.columnгазоснабжение = new global::System.Data.DataColumn("газоснабжение", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnгазоснабжение);
                this.columnгорячее_водоснаб = new global::System.Data.DataColumn("горячее_водоснаб", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnгорячее_водоснаб);
                this.columnхолодное_водоснаб = new global::System.Data.DataColumn("холодное_водоснаб", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnхолодное_водоснаб);
                this.columnтеплоснабжение = new global::System.Data.DataColumn("теплоснабжение", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnтеплоснабжение);
                this.columnэлектроснабжение = new global::System.Data.DataColumn("электроснабжение", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnэлектроснабжение);
                this.columnмат_отделки_фасада = new global::System.Data.DataColumn("мат_отделки_фасада", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnмат_отделки_фасада);
                this.columnформа_крыши = new global::System.Data.DataColumn("форма_крыши", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnформа_крыши);
                this.columnутепляющие_слои_чердачных_перекрытий = new global::System.Data.DataColumn("утепляющие_слои_чердачных_перекрытий", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnутепляющие_слои_чердачных_перекрытий);
                this.columnмат_окон = new global::System.Data.DataColumn("мат_окон", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnмат_окон);
                this.columnмат_сети_отопления = new global::System.Data.DataColumn("мат_сети_отопления", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnмат_сети_отопления);
                this.columnмат_теплоизоляции_сети = new global::System.Data.DataColumn("мат_теплоизоляции_сети", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnмат_теплоизоляции_сети);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnкод_МКД}, true));
                this.columnкод_МКД.AutoIncrement = true;
                this.columnкод_МКД.AutoIncrementSeed = -1;
                this.columnкод_МКД.AutoIncrementStep = -1;
                this.columnкод_МКД.AllowDBNull = false;
                this.columnкод_МКД.ReadOnly = true;
                this.columnкод_МКД.Unique = true;
                this.columnадрес.AllowDBNull = false;
                this.columnадрес.MaxLength = 2147483647;
                this.columnсостояние_МКД.AllowDBNull = false;
                this.columnдетская_площадка.MaxLength = 4;
                this.columnспортивная_площадка.MaxLength = 4;
                this.columnтип_управления.AllowDBNull = false;
                this.columnОКТМО.AllowDBNull = false;
                this.columnОКТМО.MaxLength = 11;
                this.columnкадастровый_номер.MaxLength = 18;
                this.columnгод_постройки.AllowDBNull = false;
                this.columnгод_постройки.MaxLength = 4;
                this.columnгод_ВДВУ.MaxLength = 4;
                this.columnтип_дома.AllowDBNull = false;
                this.columnтип_дома.MaxLength = 18;
                this.columnкол_этажей.AllowDBNull = false;
                this.columnкол_подъездов.AllowDBNull = false;
                this.columnкол_лифтов.AllowDBNull = false;
                this.columnфундамент.MaxLength = 20;
                this.columnтип_перекрытий.MaxLength = 20;
                this.columnмат_несущих_стен.MaxLength = 20;
                this.columnтип_мусоропровода.MaxLength = 20;
                this.columnвентиляция.MaxLength = 20;
                this.columnводоотведение.MaxLength = 20;
                this.columnсистема_водостоков.MaxLength = 20;
                this.columnгазоснабжение.MaxLength = 20;
                this.columnгорячее_водоснаб.MaxLength = 20;
                this.columnхолодное_водоснаб.MaxLength = 20;
                this.columnтеплоснабжение.MaxLength = 20;
                this.columnэлектроснабжение.MaxLength = 20;
                this.columnмат_отделки_фасада.MaxLength = 20;
                this.columnформа_крыши.MaxLength = 20;
                this.columnутепляющие_слои_чердачных_перекрытий.MaxLength = 20;
                this.columnмат_окон.MaxLength = 20;
                this.columnмат_сети_отопления.MaxLength = 20;
                this.columnмат_теплоизоляции_сети.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public МКДRow NewМКДRow() {
                return ((МКДRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new МКДRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(МКДRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.МКДRowChanged != null)) {
                    this.МКДRowChanged(this, new МКДRowChangeEvent(((МКДRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.МКДRowChanging != null)) {
                    this.МКДRowChanging(this, new МКДRowChangeEvent(((МКДRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.МКДRowDeleted != null)) {
                    this.МКДRowDeleted(this, new МКДRowChangeEvent(((МКДRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.МКДRowDeleting != null)) {
                    this.МКДRowDeleting(this, new МКДRowChangeEvent(((МКДRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveМКДRow(МКДRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MonitoringSystemDBDataSet ds = new MonitoringSystemDBDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "МКДDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class МКДRow : global::System.Data.DataRow {
            
            private МКДDataTable tableМКД;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal МКДRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableМКД = ((МКДDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int код_МКД {
                get {
                    return ((int)(this[this.tableМКД.код_МКДColumn]));
                }
                set {
                    this[this.tableМКД.код_МКДColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string адрес {
                get {
                    return ((string)(this[this.tableМКД.адресColumn]));
                }
                set {
                    this[this.tableМКД.адресColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public short кол_жил_пом {
                get {
                    try {
                        return ((short)(this[this.tableМКД.кол_жил_помColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'кол_жил_пом\' в таблице \'МКД\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableМКД.кол_жил_помColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int состояние_МКД {
                get {
                    return ((int)(this[this.tableМКД.состояние_МКДColumn]));
                }
                set {
                    this[this.tableМКД.состояние_МКДColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string детская_площадка {
                get {
                    try {
                        return ((string)(this[this.tableМКД.детская_площадкаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'детская_площадка\' в таблице \'МКД\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableМКД.детская_площадкаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string спортивная_площадка {
                get {
                    try {
                        return ((string)(this[this.tableМКД.спортивная_площадкаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'спортивная_площадка\' в таблице \'МКД\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableМКД.спортивная_площадкаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int тип_управления {
                get {
                    return ((int)(this[this.tableМКД.тип_управленияColumn]));
                }
                set {
                    this[this.tableМКД.тип_управленияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ОКТМО {
                get {
                    return ((string)(this[this.tableМКД.ОКТМОColumn]));
                }
                set {
                    this[this.tableМКД.ОКТМОColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int УК {
                get {
                    try {
                        return ((int)(this[this.tableМКД.УКColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'УК\' в таблице \'МКД\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableМКД.УКColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string кадастровый_номер {
                get {
                    try {
                        return ((string)(this[this.tableМКД.кадастровый_номерColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'кадастровый_номер\' в таблице \'МКД\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableМКД.кадастровый_номерColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string год_постройки {
                get {
                    return ((string)(this[this.tableМКД.год_постройкиColumn]));
                }
                set {
                    this[this.tableМКД.год_постройкиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string год_ВДВУ {
                get {
                    try {
                        return ((string)(this[this.tableМКД.год_ВДВУColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'год_ВДВУ\' в таблице \'МКД\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableМКД.год_ВДВУColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string тип_дома {
                get {
                    return ((string)(this[this.tableМКД.тип_домаColumn]));
                }
                set {
                    this[this.tableМКД.тип_домаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public byte кол_этажей {
                get {
                    return ((byte)(this[this.tableМКД.кол_этажейColumn]));
                }
                set {
                    this[this.tableМКД.кол_этажейColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public byte кол_подъездов {
                get {
                    return ((byte)(this[this.tableМКД.кол_подъездовColumn]));
                }
                set {
                    this[this.tableМКД.кол_подъездовColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public byte кол_лифтов {
                get {
                    return ((byte)(this[this.tableМКД.кол_лифтовColumn]));
                }
                set {
                    this[this.tableМКД.кол_лифтовColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal площадь_жил_пом {
                get {
                    try {
                        return ((decimal)(this[this.tableМКД.площадь_жил_помColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'площадь_жил_пом\' в таблице \'МКД\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableМКД.площадь_жил_помColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal площадь_нежил_пом {
                get {
                    try {
                        return ((decimal)(this[this.tableМКД.площадь_нежил_помColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'площадь_нежил_пом\' в таблице \'МКД\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableМКД.площадь_нежил_помColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal площадь_ПВСОИ {
                get {
                    try {
                        return ((decimal)(this[this.tableМКД.площадь_ПВСОИColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'площадь_ПВСОИ\' в таблице \'МКД\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableМКД.площадь_ПВСОИColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal площадь_зем_участка {
                get {
                    try {
                        return ((decimal)(this[this.tableМКД.площадь_зем_участкаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'площадь_зем_участка\' в таблице \'МКД\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableМКД.площадь_зем_участкаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string фундамент {
                get {
                    try {
                        return ((string)(this[this.tableМКД.фундаментColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'фундамент\' в таблице \'МКД\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableМКД.фундаментColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string тип_перекрытий {
                get {
                    try {
                        return ((string)(this[this.tableМКД.тип_перекрытийColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'тип_перекрытий\' в таблице \'МКД\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableМКД.тип_перекрытийColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string мат_несущих_стен {
                get {
                    try {
                        return ((string)(this[this.tableМКД.мат_несущих_стенColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'мат_несущих_стен\' в таблице \'МКД\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableМКД.мат_несущих_стенColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal площадь_подвала {
                get {
                    try {
                        return ((decimal)(this[this.tableМКД.площадь_подвалаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'площадь_подвала\' в таблице \'МКД\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableМКД.площадь_подвалаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string тип_мусоропровода {
                get {
                    try {
                        return ((string)(this[this.tableМКД.тип_мусоропроводаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'тип_мусоропровода\' в таблице \'МКД\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableМКД.тип_мусоропроводаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string вентиляция {
                get {
                    try {
                        return ((string)(this[this.tableМКД.вентиляцияColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'вентиляция\' в таблице \'МКД\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableМКД.вентиляцияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string водоотведение {
                get {
                    try {
                        return ((string)(this[this.tableМКД.водоотведениеColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'водоотведение\' в таблице \'МКД\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableМКД.водоотведениеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string система_водостоков {
                get {
                    try {
                        return ((string)(this[this.tableМКД.система_водостоковColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'система_водостоков\' в таблице \'МКД\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableМКД.система_водостоковColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string газоснабжение {
                get {
                    try {
                        return ((string)(this[this.tableМКД.газоснабжениеColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'газоснабжение\' в таблице \'МКД\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableМКД.газоснабжениеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string горячее_водоснаб {
                get {
                    try {
                        return ((string)(this[this.tableМКД.горячее_водоснабColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'горячее_водоснаб\' в таблице \'МКД\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableМКД.горячее_водоснабColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string холодное_водоснаб {
                get {
                    try {
                        return ((string)(this[this.tableМКД.холодное_водоснабColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'холодное_водоснаб\' в таблице \'МКД\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableМКД.холодное_водоснабColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string теплоснабжение {
                get {
                    try {
                        return ((string)(this[this.tableМКД.теплоснабжениеColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'теплоснабжение\' в таблице \'МКД\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableМКД.теплоснабжениеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string электроснабжение {
                get {
                    try {
                        return ((string)(this[this.tableМКД.электроснабжениеColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'электроснабжение\' в таблице \'МКД\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableМКД.электроснабжениеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string мат_отделки_фасада {
                get {
                    try {
                        return ((string)(this[this.tableМКД.мат_отделки_фасадаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'мат_отделки_фасада\' в таблице \'МКД\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableМКД.мат_отделки_фасадаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string форма_крыши {
                get {
                    try {
                        return ((string)(this[this.tableМКД.форма_крышиColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'форма_крыши\' в таблице \'МКД\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableМКД.форма_крышиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string утепляющие_слои_чердачных_перекрытий {
                get {
                    try {
                        return ((string)(this[this.tableМКД.утепляющие_слои_чердачных_перекрытийColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'утепляющие_слои_чердачных_перекрытий\' в таблице \'МКД\' равно" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableМКД.утепляющие_слои_чердачных_перекрытийColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string мат_окон {
                get {
                    try {
                        return ((string)(this[this.tableМКД.мат_оконColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'мат_окон\' в таблице \'МКД\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableМКД.мат_оконColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string мат_сети_отопления {
                get {
                    try {
                        return ((string)(this[this.tableМКД.мат_сети_отопленияColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'мат_сети_отопления\' в таблице \'МКД\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableМКД.мат_сети_отопленияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string мат_теплоизоляции_сети {
                get {
                    try {
                        return ((string)(this[this.tableМКД.мат_теплоизоляции_сетиColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'мат_теплоизоляции_сети\' в таблице \'МКД\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableМКД.мат_теплоизоляции_сетиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isкол_жил_помNull() {
                return this.IsNull(this.tableМКД.кол_жил_помColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setкол_жил_помNull() {
                this[this.tableМКД.кол_жил_помColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isдетская_площадкаNull() {
                return this.IsNull(this.tableМКД.детская_площадкаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setдетская_площадкаNull() {
                this[this.tableМКД.детская_площадкаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isспортивная_площадкаNull() {
                return this.IsNull(this.tableМКД.спортивная_площадкаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setспортивная_площадкаNull() {
                this[this.tableМКД.спортивная_площадкаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsУКNull() {
                return this.IsNull(this.tableМКД.УКColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetУКNull() {
                this[this.tableМКД.УКColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isкадастровый_номерNull() {
                return this.IsNull(this.tableМКД.кадастровый_номерColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setкадастровый_номерNull() {
                this[this.tableМКД.кадастровый_номерColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isгод_ВДВУNull() {
                return this.IsNull(this.tableМКД.год_ВДВУColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setгод_ВДВУNull() {
                this[this.tableМКД.год_ВДВУColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isплощадь_жил_помNull() {
                return this.IsNull(this.tableМКД.площадь_жил_помColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setплощадь_жил_помNull() {
                this[this.tableМКД.площадь_жил_помColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isплощадь_нежил_помNull() {
                return this.IsNull(this.tableМКД.площадь_нежил_помColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setплощадь_нежил_помNull() {
                this[this.tableМКД.площадь_нежил_помColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isплощадь_ПВСОИNull() {
                return this.IsNull(this.tableМКД.площадь_ПВСОИColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setплощадь_ПВСОИNull() {
                this[this.tableМКД.площадь_ПВСОИColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isплощадь_зем_участкаNull() {
                return this.IsNull(this.tableМКД.площадь_зем_участкаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setплощадь_зем_участкаNull() {
                this[this.tableМКД.площадь_зем_участкаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsфундаментNull() {
                return this.IsNull(this.tableМКД.фундаментColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetфундаментNull() {
                this[this.tableМКД.фундаментColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isтип_перекрытийNull() {
                return this.IsNull(this.tableМКД.тип_перекрытийColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setтип_перекрытийNull() {
                this[this.tableМКД.тип_перекрытийColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isмат_несущих_стенNull() {
                return this.IsNull(this.tableМКД.мат_несущих_стенColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setмат_несущих_стенNull() {
                this[this.tableМКД.мат_несущих_стенColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isплощадь_подвалаNull() {
                return this.IsNull(this.tableМКД.площадь_подвалаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setплощадь_подвалаNull() {
                this[this.tableМКД.площадь_подвалаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isтип_мусоропроводаNull() {
                return this.IsNull(this.tableМКД.тип_мусоропроводаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setтип_мусоропроводаNull() {
                this[this.tableМКД.тип_мусоропроводаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsвентиляцияNull() {
                return this.IsNull(this.tableМКД.вентиляцияColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetвентиляцияNull() {
                this[this.tableМКД.вентиляцияColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsводоотведениеNull() {
                return this.IsNull(this.tableМКД.водоотведениеColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetводоотведениеNull() {
                this[this.tableМКД.водоотведениеColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isсистема_водостоковNull() {
                return this.IsNull(this.tableМКД.система_водостоковColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setсистема_водостоковNull() {
                this[this.tableМКД.система_водостоковColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsгазоснабжениеNull() {
                return this.IsNull(this.tableМКД.газоснабжениеColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetгазоснабжениеNull() {
                this[this.tableМКД.газоснабжениеColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isгорячее_водоснабNull() {
                return this.IsNull(this.tableМКД.горячее_водоснабColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setгорячее_водоснабNull() {
                this[this.tableМКД.горячее_водоснабColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isхолодное_водоснабNull() {
                return this.IsNull(this.tableМКД.холодное_водоснабColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setхолодное_водоснабNull() {
                this[this.tableМКД.холодное_водоснабColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsтеплоснабжениеNull() {
                return this.IsNull(this.tableМКД.теплоснабжениеColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetтеплоснабжениеNull() {
                this[this.tableМКД.теплоснабжениеColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsэлектроснабжениеNull() {
                return this.IsNull(this.tableМКД.электроснабжениеColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetэлектроснабжениеNull() {
                this[this.tableМКД.электроснабжениеColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isмат_отделки_фасадаNull() {
                return this.IsNull(this.tableМКД.мат_отделки_фасадаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setмат_отделки_фасадаNull() {
                this[this.tableМКД.мат_отделки_фасадаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isформа_крышиNull() {
                return this.IsNull(this.tableМКД.форма_крышиColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setформа_крышиNull() {
                this[this.tableМКД.форма_крышиColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isутепляющие_слои_чердачных_перекрытийNull() {
                return this.IsNull(this.tableМКД.утепляющие_слои_чердачных_перекрытийColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setутепляющие_слои_чердачных_перекрытийNull() {
                this[this.tableМКД.утепляющие_слои_чердачных_перекрытийColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isмат_оконNull() {
                return this.IsNull(this.tableМКД.мат_оконColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setмат_оконNull() {
                this[this.tableМКД.мат_оконColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isмат_сети_отопленияNull() {
                return this.IsNull(this.tableМКД.мат_сети_отопленияColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setмат_сети_отопленияNull() {
                this[this.tableМКД.мат_сети_отопленияColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isмат_теплоизоляции_сетиNull() {
                return this.IsNull(this.tableМКД.мат_теплоизоляции_сетиColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setмат_теплоизоляции_сетиNull() {
                this[this.tableМКД.мат_теплоизоляции_сетиColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class МКДRowChangeEvent : global::System.EventArgs {
            
            private МКДRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public МКДRowChangeEvent(МКДRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public МКДRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace MonitoringSystem.MonitoringSystemDBDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class МКДTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public МКДTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "МКД";
            tableMapping.ColumnMappings.Add("код_МКД", "код_МКД");
            tableMapping.ColumnMappings.Add("адрес", "адрес");
            tableMapping.ColumnMappings.Add("кол_жил_пом", "кол_жил_пом");
            tableMapping.ColumnMappings.Add("состояние_МКД", "состояние_МКД");
            tableMapping.ColumnMappings.Add("детская_площадка", "детская_площадка");
            tableMapping.ColumnMappings.Add("спортивная_площадка", "спортивная_площадка");
            tableMapping.ColumnMappings.Add("тип_управления", "тип_управления");
            tableMapping.ColumnMappings.Add("ОКТМО", "ОКТМО");
            tableMapping.ColumnMappings.Add("УК", "УК");
            tableMapping.ColumnMappings.Add("кадастровый_номер", "кадастровый_номер");
            tableMapping.ColumnMappings.Add("год_постройки", "год_постройки");
            tableMapping.ColumnMappings.Add("год_ВДВУ", "год_ВДВУ");
            tableMapping.ColumnMappings.Add("тип_дома", "тип_дома");
            tableMapping.ColumnMappings.Add("кол_этажей", "кол_этажей");
            tableMapping.ColumnMappings.Add("кол_подъездов", "кол_подъездов");
            tableMapping.ColumnMappings.Add("кол_лифтов", "кол_лифтов");
            tableMapping.ColumnMappings.Add("площадь_жил_пом", "площадь_жил_пом");
            tableMapping.ColumnMappings.Add("площадь_нежил_пом", "площадь_нежил_пом");
            tableMapping.ColumnMappings.Add("площадь_ПВСОИ", "площадь_ПВСОИ");
            tableMapping.ColumnMappings.Add("площадь_зем_участка", "площадь_зем_участка");
            tableMapping.ColumnMappings.Add("фундамент", "фундамент");
            tableMapping.ColumnMappings.Add("тип_перекрытий", "тип_перекрытий");
            tableMapping.ColumnMappings.Add("мат_несущих_стен", "мат_несущих_стен");
            tableMapping.ColumnMappings.Add("площадь_подвала", "площадь_подвала");
            tableMapping.ColumnMappings.Add("тип_мусоропровода", "тип_мусоропровода");
            tableMapping.ColumnMappings.Add("вентиляция", "вентиляция");
            tableMapping.ColumnMappings.Add("водоотведение", "водоотведение");
            tableMapping.ColumnMappings.Add("система_водостоков", "система_водостоков");
            tableMapping.ColumnMappings.Add("газоснабжение", "газоснабжение");
            tableMapping.ColumnMappings.Add("горячее_водоснаб", "горячее_водоснаб");
            tableMapping.ColumnMappings.Add("холодное_водоснаб", "холодное_водоснаб");
            tableMapping.ColumnMappings.Add("теплоснабжение", "теплоснабжение");
            tableMapping.ColumnMappings.Add("электроснабжение", "электроснабжение");
            tableMapping.ColumnMappings.Add("мат_отделки_фасада", "мат_отделки_фасада");
            tableMapping.ColumnMappings.Add("форма_крыши", "форма_крыши");
            tableMapping.ColumnMappings.Add("утепляющие_слои_чердачных_перекрытий", "утепляющие_слои_чердачных_перекрытий");
            tableMapping.ColumnMappings.Add("мат_окон", "мат_окон");
            tableMapping.ColumnMappings.Add("мат_сети_отопления", "мат_сети_отопления");
            tableMapping.ColumnMappings.Add("мат_теплоизоляции_сети", "мат_теплоизоляции_сети");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[МКД] WHERE (([код_МКД] = @Original_код_МКД) AND ((@IsNull_кол_" +
                "жил_пом = 1 AND [кол_жил_пом] IS NULL) OR ([кол_жил_пом] = @Original_кол_жил_пом" +
                ")) AND ([состояние_МКД] = @Original_состояние_МКД) AND ((@IsNull_детская_площадк" +
                "а = 1 AND [детская_площадка] IS NULL) OR ([детская_площадка] = @Original_детская" +
                "_площадка)) AND ((@IsNull_спортивная_площадка = 1 AND [спортивная_площадка] IS N" +
                "ULL) OR ([спортивная_площадка] = @Original_спортивная_площадка)) AND ([тип_управ" +
                "ления] = @Original_тип_управления) AND ([ОКТМО] = @Original_ОКТМО) AND ((@IsNull" +
                "_УК = 1 AND [УК] IS NULL) OR ([УК] = @Original_УК)) AND ((@IsNull_кадастровый_но" +
                "мер = 1 AND [кадастровый_номер] IS NULL) OR ([кадастровый_номер] = @Original_кад" +
                "астровый_номер)) AND ([год_постройки] = @Original_год_постройки) AND ((@IsNull_г" +
                "од_ВДВУ = 1 AND [год_ВДВУ] IS NULL) OR ([год_ВДВУ] = @Original_год_ВДВУ)) AND ([" +
                "тип_дома] = @Original_тип_дома) AND ([кол_этажей] = @Original_кол_этажей) AND ([" +
                "кол_подъездов] = @Original_кол_подъездов) AND ([кол_лифтов] = @Original_кол_лифт" +
                "ов) AND ((@IsNull_площадь_жил_пом = 1 AND [площадь_жил_пом] IS NULL) OR ([площад" +
                "ь_жил_пом] = @Original_площадь_жил_пом)) AND ((@IsNull_площадь_нежил_пом = 1 AND" +
                " [площадь_нежил_пом] IS NULL) OR ([площадь_нежил_пом] = @Original_площадь_нежил_" +
                "пом)) AND ((@IsNull_площадь_ПВСОИ = 1 AND [площадь_ПВСОИ] IS NULL) OR ([площадь_" +
                "ПВСОИ] = @Original_площадь_ПВСОИ)) AND ((@IsNull_площадь_зем_участка = 1 AND [пл" +
                "ощадь_зем_участка] IS NULL) OR ([площадь_зем_участка] = @Original_площадь_зем_уч" +
                "астка)) AND ((@IsNull_фундамент = 1 AND [фундамент] IS NULL) OR ([фундамент] = @" +
                "Original_фундамент)) AND ((@IsNull_тип_перекрытий = 1 AND [тип_перекрытий] IS NU" +
                "LL) OR ([тип_перекрытий] = @Original_тип_перекрытий)) AND ((@IsNull_мат_несущих_" +
                "стен = 1 AND [мат_несущих_стен] IS NULL) OR ([мат_несущих_стен] = @Original_мат_" +
                "несущих_стен)) AND ((@IsNull_площадь_подвала = 1 AND [площадь_подвала] IS NULL) " +
                "OR ([площадь_подвала] = @Original_площадь_подвала)) AND ((@IsNull_тип_мусоропров" +
                "ода = 1 AND [тип_мусоропровода] IS NULL) OR ([тип_мусоропровода] = @Original_тип" +
                "_мусоропровода)) AND ((@IsNull_вентиляция = 1 AND [вентиляция] IS NULL) OR ([вен" +
                "тиляция] = @Original_вентиляция)) AND ((@IsNull_водоотведение = 1 AND [водоотвед" +
                "ение] IS NULL) OR ([водоотведение] = @Original_водоотведение)) AND ((@IsNull_сис" +
                "тема_водостоков = 1 AND [система_водостоков] IS NULL) OR ([система_водостоков] =" +
                " @Original_система_водостоков)) AND ((@IsNull_газоснабжение = 1 AND [газоснабжен" +
                "ие] IS NULL) OR ([газоснабжение] = @Original_газоснабжение)) AND ((@IsNull_горяч" +
                "ее_водоснаб = 1 AND [горячее_водоснаб] IS NULL) OR ([горячее_водоснаб] = @Origin" +
                "al_горячее_водоснаб)) AND ((@IsNull_холодное_водоснаб = 1 AND [холодное_водоснаб" +
                "] IS NULL) OR ([холодное_водоснаб] = @Original_холодное_водоснаб)) AND ((@IsNull" +
                "_теплоснабжение = 1 AND [теплоснабжение] IS NULL) OR ([теплоснабжение] = @Origin" +
                "al_теплоснабжение)) AND ((@IsNull_электроснабжение = 1 AND [электроснабжение] IS" +
                " NULL) OR ([электроснабжение] = @Original_электроснабжение)) AND ((@IsNull_мат_о" +
                "тделки_фасада = 1 AND [мат_отделки_фасада] IS NULL) OR ([мат_отделки_фасада] = @" +
                "Original_мат_отделки_фасада)) AND ((@IsNull_форма_крыши = 1 AND [форма_крыши] IS" +
                " NULL) OR ([форма_крыши] = @Original_форма_крыши)) AND ((@IsNull_утепляющие_слои" +
                "_чердачных_перекрытий = 1 AND [утепляющие_слои_чердачных_перекрытий] IS NULL) OR" +
                " ([утепляющие_слои_чердачных_перекрытий] = @Original_утепляющие_слои_чердачных_п" +
                "ерекрытий)) AND ((@IsNull_мат_окон = 1 AND [мат_окон] IS NULL) OR ([мат_окон] = " +
                "@Original_мат_окон)) AND ((@IsNull_мат_сети_отопления = 1 AND [мат_сети_отоплени" +
                "я] IS NULL) OR ([мат_сети_отопления] = @Original_мат_сети_отопления)) AND ((@IsN" +
                "ull_мат_теплоизоляции_сети = 1 AND [мат_теплоизоляции_сети] IS NULL) OR ([мат_те" +
                "плоизоляции_сети] = @Original_мат_теплоизоляции_сети)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_код_МКД", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "код_МКД", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_кол_жил_пом", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "кол_жил_пом", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_кол_жил_пом", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "кол_жил_пом", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_состояние_МКД", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "состояние_МКД", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_детская_площадка", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "детская_площадка", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_детская_площадка", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "детская_площадка", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_спортивная_площадка", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "спортивная_площадка", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_спортивная_площадка", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "спортивная_площадка", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_тип_управления", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "тип_управления", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ОКТМО", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОКТМО", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_УК", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "УК", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_УК", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "УК", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_кадастровый_номер", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "кадастровый_номер", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_кадастровый_номер", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "кадастровый_номер", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_год_постройки", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "год_постройки", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_год_ВДВУ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "год_ВДВУ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_год_ВДВУ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "год_ВДВУ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_тип_дома", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "тип_дома", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_кол_этажей", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "кол_этажей", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_кол_подъездов", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "кол_подъездов", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_кол_лифтов", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "кол_лифтов", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_площадь_жил_пом", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "площадь_жил_пом", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_площадь_жил_пом", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "площадь_жил_пом", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_площадь_нежил_пом", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "площадь_нежил_пом", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_площадь_нежил_пом", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "площадь_нежил_пом", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_площадь_ПВСОИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "площадь_ПВСОИ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_площадь_ПВСОИ", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "площадь_ПВСОИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_площадь_зем_участка", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "площадь_зем_участка", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_площадь_зем_участка", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 4, "площадь_зем_участка", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_фундамент", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "фундамент", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_фундамент", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "фундамент", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_тип_перекрытий", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "тип_перекрытий", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_тип_перекрытий", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "тип_перекрытий", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_мат_несущих_стен", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "мат_несущих_стен", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_мат_несущих_стен", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "мат_несущих_стен", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_площадь_подвала", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "площадь_подвала", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_площадь_подвала", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "площадь_подвала", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_тип_мусоропровода", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "тип_мусоропровода", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_тип_мусоропровода", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "тип_мусоропровода", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_вентиляция", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "вентиляция", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_вентиляция", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "вентиляция", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_водоотведение", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "водоотведение", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_водоотведение", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "водоотведение", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_система_водостоков", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "система_водостоков", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_система_водостоков", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "система_водостоков", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_газоснабжение", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "газоснабжение", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_газоснабжение", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "газоснабжение", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_горячее_водоснаб", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "горячее_водоснаб", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_горячее_водоснаб", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "горячее_водоснаб", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_холодное_водоснаб", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "холодное_водоснаб", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_холодное_водоснаб", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "холодное_водоснаб", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_теплоснабжение", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "теплоснабжение", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_теплоснабжение", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "теплоснабжение", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_электроснабжение", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "электроснабжение", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_электроснабжение", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "электроснабжение", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_мат_отделки_фасада", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "мат_отделки_фасада", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_мат_отделки_фасада", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "мат_отделки_фасада", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_форма_крыши", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "форма_крыши", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_форма_крыши", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "форма_крыши", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_утепляющие_слои_чердачных_перекрытий", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "утепляющие_слои_чердачных_перекрытий", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_утепляющие_слои_чердачных_перекрытий", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "утепляющие_слои_чердачных_перекрытий", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_мат_окон", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "мат_окон", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_мат_окон", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "мат_окон", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_мат_сети_отопления", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "мат_сети_отопления", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_мат_сети_отопления", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "мат_сети_отопления", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_мат_теплоизоляции_сети", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "мат_теплоизоляции_сети", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_мат_теплоизоляции_сети", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "мат_теплоизоляции_сети", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[МКД] ([адрес], [кол_жил_пом], [состояние_МКД], [детская_площад" +
                "ка], [спортивная_площадка], [тип_управления], [ОКТМО], [УК], [кадастровый_номер]" +
                ", [год_постройки], [год_ВДВУ], [тип_дома], [кол_этажей], [кол_подъездов], [кол_л" +
                "ифтов], [площадь_жил_пом], [площадь_нежил_пом], [площадь_ПВСОИ], [площадь_зем_уч" +
                "астка], [фундамент], [тип_перекрытий], [мат_несущих_стен], [площадь_подвала], [т" +
                "ип_мусоропровода], [вентиляция], [водоотведение], [система_водостоков], [газосна" +
                "бжение], [горячее_водоснаб], [холодное_водоснаб], [теплоснабжение], [электроснаб" +
                "жение], [мат_отделки_фасада], [форма_крыши], [утепляющие_слои_чердачных_перекрыт" +
                "ий], [мат_окон], [мат_сети_отопления], [мат_теплоизоляции_сети]) VALUES (@адрес," +
                " @кол_жил_пом, @состояние_МКД, @детская_площадка, @спортивная_площадка, @тип_упр" +
                "авления, @ОКТМО, @УК, @кадастровый_номер, @год_постройки, @год_ВДВУ, @тип_дома, " +
                "@кол_этажей, @кол_подъездов, @кол_лифтов, @площадь_жил_пом, @площадь_нежил_пом, " +
                "@площадь_ПВСОИ, @площадь_зем_участка, @фундамент, @тип_перекрытий, @мат_несущих_" +
                "стен, @площадь_подвала, @тип_мусоропровода, @вентиляция, @водоотведение, @систем" +
                "а_водостоков, @газоснабжение, @горячее_водоснаб, @холодное_водоснаб, @теплоснабж" +
                "ение, @электроснабжение, @мат_отделки_фасада, @форма_крыши, @утепляющие_слои_чер" +
                "дачных_перекрытий, @мат_окон, @мат_сети_отопления, @мат_теплоизоляции_сети);\r\nSE" +
                "LECT код_МКД, адрес, кол_жил_пом, состояние_МКД, детская_площадка, спортивная_пл" +
                "ощадка, тип_управления, ОКТМО, УК, кадастровый_номер, год_постройки, год_ВДВУ, т" +
                "ип_дома, кол_этажей, кол_подъездов, кол_лифтов, площадь_жил_пом, площадь_нежил_п" +
                "ом, площадь_ПВСОИ, площадь_зем_участка, фундамент, тип_перекрытий, мат_несущих_с" +
                "тен, площадь_подвала, тип_мусоропровода, вентиляция, водоотведение, система_водо" +
                "стоков, газоснабжение, горячее_водоснаб, холодное_водоснаб, теплоснабжение, элек" +
                "троснабжение, мат_отделки_фасада, форма_крыши, утепляющие_слои_чердачных_перекры" +
                "тий, мат_окон, мат_сети_отопления, мат_теплоизоляции_сети FROM МКД WHERE (код_МК" +
                "Д = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@адрес", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "адрес", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@кол_жил_пом", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "кол_жил_пом", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@состояние_МКД", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "состояние_МКД", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@детская_площадка", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "детская_площадка", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@спортивная_площадка", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "спортивная_площадка", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@тип_управления", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "тип_управления", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ОКТМО", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОКТМО", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@УК", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "УК", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@кадастровый_номер", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "кадастровый_номер", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@год_постройки", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "год_постройки", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@год_ВДВУ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "год_ВДВУ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@тип_дома", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "тип_дома", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@кол_этажей", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "кол_этажей", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@кол_подъездов", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "кол_подъездов", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@кол_лифтов", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "кол_лифтов", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@площадь_жил_пом", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "площадь_жил_пом", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@площадь_нежил_пом", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "площадь_нежил_пом", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@площадь_ПВСОИ", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "площадь_ПВСОИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@площадь_зем_участка", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 4, "площадь_зем_участка", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@фундамент", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "фундамент", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@тип_перекрытий", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "тип_перекрытий", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@мат_несущих_стен", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "мат_несущих_стен", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@площадь_подвала", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "площадь_подвала", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@тип_мусоропровода", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "тип_мусоропровода", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@вентиляция", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "вентиляция", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@водоотведение", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "водоотведение", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@система_водостоков", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "система_водостоков", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@газоснабжение", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "газоснабжение", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@горячее_водоснаб", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "горячее_водоснаб", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@холодное_водоснаб", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "холодное_водоснаб", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@теплоснабжение", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "теплоснабжение", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@электроснабжение", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "электроснабжение", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@мат_отделки_фасада", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "мат_отделки_фасада", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@форма_крыши", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "форма_крыши", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@утепляющие_слои_чердачных_перекрытий", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "утепляющие_слои_чердачных_перекрытий", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@мат_окон", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "мат_окон", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@мат_сети_отопления", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "мат_сети_отопления", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@мат_теплоизоляции_сети", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "мат_теплоизоляции_сети", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[МКД] SET [адрес] = @адрес, [кол_жил_пом] = @кол_жил_пом, [состояние" +
                "_МКД] = @состояние_МКД, [детская_площадка] = @детская_площадка, [спортивная_площ" +
                "адка] = @спортивная_площадка, [тип_управления] = @тип_управления, [ОКТМО] = @ОКТ" +
                "МО, [УК] = @УК, [кадастровый_номер] = @кадастровый_номер, [год_постройки] = @год" +
                "_постройки, [год_ВДВУ] = @год_ВДВУ, [тип_дома] = @тип_дома, [кол_этажей] = @кол_" +
                "этажей, [кол_подъездов] = @кол_подъездов, [кол_лифтов] = @кол_лифтов, [площадь_ж" +
                "ил_пом] = @площадь_жил_пом, [площадь_нежил_пом] = @площадь_нежил_пом, [площадь_П" +
                "ВСОИ] = @площадь_ПВСОИ, [площадь_зем_участка] = @площадь_зем_участка, [фундамент" +
                "] = @фундамент, [тип_перекрытий] = @тип_перекрытий, [мат_несущих_стен] = @мат_не" +
                "сущих_стен, [площадь_подвала] = @площадь_подвала, [тип_мусоропровода] = @тип_мус" +
                "оропровода, [вентиляция] = @вентиляция, [водоотведение] = @водоотведение, [систе" +
                "ма_водостоков] = @система_водостоков, [газоснабжение] = @газоснабжение, [горячее" +
                "_водоснаб] = @горячее_водоснаб, [холодное_водоснаб] = @холодное_водоснаб, [тепло" +
                "снабжение] = @теплоснабжение, [электроснабжение] = @электроснабжение, [мат_отдел" +
                "ки_фасада] = @мат_отделки_фасада, [форма_крыши] = @форма_крыши, [утепляющие_слои" +
                "_чердачных_перекрытий] = @утепляющие_слои_чердачных_перекрытий, [мат_окон] = @ма" +
                "т_окон, [мат_сети_отопления] = @мат_сети_отопления, [мат_теплоизоляции_сети] = @" +
                "мат_теплоизоляции_сети WHERE (([код_МКД] = @Original_код_МКД) AND ((@IsNull_кол_" +
                "жил_пом = 1 AND [кол_жил_пом] IS NULL) OR ([кол_жил_пом] = @Original_кол_жил_пом" +
                ")) AND ([состояние_МКД] = @Original_состояние_МКД) AND ((@IsNull_детская_площадк" +
                "а = 1 AND [детская_площадка] IS NULL) OR ([детская_площадка] = @Original_детская" +
                "_площадка)) AND ((@IsNull_спортивная_площадка = 1 AND [спортивная_площадка] IS N" +
                "ULL) OR ([спортивная_площадка] = @Original_спортивная_площадка)) AND ([тип_управ" +
                "ления] = @Original_тип_управления) AND ([ОКТМО] = @Original_ОКТМО) AND ((@IsNull" +
                "_УК = 1 AND [УК] IS NULL) OR ([УК] = @Original_УК)) AND ((@IsNull_кадастровый_но" +
                "мер = 1 AND [кадастровый_номер] IS NULL) OR ([кадастровый_номер] = @Original_кад" +
                "астровый_номер)) AND ([год_постройки] = @Original_год_постройки) AND ((@IsNull_г" +
                "од_ВДВУ = 1 AND [год_ВДВУ] IS NULL) OR ([год_ВДВУ] = @Original_год_ВДВУ)) AND ([" +
                "тип_дома] = @Original_тип_дома) AND ([кол_этажей] = @Original_кол_этажей) AND ([" +
                "кол_подъездов] = @Original_кол_подъездов) AND ([кол_лифтов] = @Original_кол_лифт" +
                "ов) AND ((@IsNull_площадь_жил_пом = 1 AND [площадь_жил_пом] IS NULL) OR ([площад" +
                "ь_жил_пом] = @Original_площадь_жил_пом)) AND ((@IsNull_площадь_нежил_пом = 1 AND" +
                " [площадь_нежил_пом] IS NULL) OR ([площадь_нежил_пом] = @Original_площадь_нежил_" +
                "пом)) AND ((@IsNull_площадь_ПВСОИ = 1 AND [площадь_ПВСОИ] IS NULL) OR ([площадь_" +
                "ПВСОИ] = @Original_площадь_ПВСОИ)) AND ((@IsNull_площадь_зем_участка = 1 AND [пл" +
                "ощадь_зем_участка] IS NULL) OR ([площадь_зем_участка] = @Original_площадь_зем_уч" +
                "астка)) AND ((@IsNull_фундамент = 1 AND [фундамент] IS NULL) OR ([фундамент] = @" +
                "Original_фундамент)) AND ((@IsNull_тип_перекрытий = 1 AND [тип_перекрытий] IS NU" +
                "LL) OR ([тип_перекрытий] = @Original_тип_перекрытий)) AND ((@IsNull_мат_несущих_" +
                "стен = 1 AND [мат_несущих_стен] IS NULL) OR ([мат_несущих_стен] = @Original_мат_" +
                "несущих_стен)) AND ((@IsNull_площадь_подвала = 1 AND [площадь_подвала] IS NULL) " +
                "OR ([площадь_подвала] = @Original_площадь_подвала)) AND ((@IsNull_тип_мусоропров" +
                "ода = 1 AND [тип_мусоропровода] IS NULL) OR ([тип_мусоропровода] = @Original_тип" +
                "_мусоропровода)) AND ((@IsNull_вентиляция = 1 AND [вентиляция] IS NULL) OR ([вен" +
                "тиляция] = @Original_вентиляция)) AND ((@IsNull_водоотведение = 1 AND [водоотвед" +
                "ение] IS NULL) OR ([водоотведение] = @Original_водоотведение)) AND ((@IsNull_сис" +
                "тема_водостоков = 1 AND [система_водостоков] IS NULL) OR ([система_водостоков] =" +
                " @Original_система_водостоков)) AND ((@IsNull_газоснабжение = 1 AND [газоснабжен" +
                "ие] IS NULL) OR ([газоснабжение] = @Original_газоснабжение)) AND ((@IsNull_горяч" +
                "ее_водоснаб = 1 AND [горячее_водоснаб] IS NULL) OR ([горячее_водоснаб] = @Origin" +
                "al_горячее_водоснаб)) AND ((@IsNull_холодное_водоснаб = 1 AND [холодное_водоснаб" +
                "] IS NULL) OR ([холодное_водоснаб] = @Original_холодное_водоснаб)) AND ((@IsNull" +
                "_теплоснабжение = 1 AND [теплоснабжение] IS NULL) OR ([теплоснабжение] = @Origin" +
                "al_теплоснабжение)) AND ((@IsNull_электроснабжение = 1 AND [электроснабжение] IS" +
                " NULL) OR ([электроснабжение] = @Original_электроснабжение)) AND ((@IsNull_мат_о" +
                "тделки_фасада = 1 AND [мат_отделки_фасада] IS NULL) OR ([мат_отделки_фасада] = @" +
                "Original_мат_отделки_фасада)) AND ((@IsNull_форма_крыши = 1 AND [форма_крыши] IS" +
                " NULL) OR ([форма_крыши] = @Original_форма_крыши)) AND ((@IsNull_утепляющие_слои" +
                "_чердачных_перекрытий = 1 AND [утепляющие_слои_чердачных_перекрытий] IS NULL) OR" +
                " ([утепляющие_слои_чердачных_перекрытий] = @Original_утепляющие_слои_чердачных_п" +
                "ерекрытий)) AND ((@IsNull_мат_окон = 1 AND [мат_окон] IS NULL) OR ([мат_окон] = " +
                "@Original_мат_окон)) AND ((@IsNull_мат_сети_отопления = 1 AND [мат_сети_отоплени" +
                "я] IS NULL) OR ([мат_сети_отопления] = @Original_мат_сети_отопления)) AND ((@IsN" +
                "ull_мат_теплоизоляции_сети = 1 AND [мат_теплоизоляции_сети] IS NULL) OR ([мат_те" +
                "плоизоляции_сети] = @Original_мат_теплоизоляции_сети)));\r\nSELECT код_МКД, адрес," +
                " кол_жил_пом, состояние_МКД, детская_площадка, спортивная_площадка, тип_управлен" +
                "ия, ОКТМО, УК, кадастровый_номер, год_постройки, год_ВДВУ, тип_дома, кол_этажей," +
                " кол_подъездов, кол_лифтов, площадь_жил_пом, площадь_нежил_пом, площадь_ПВСОИ, п" +
                "лощадь_зем_участка, фундамент, тип_перекрытий, мат_несущих_стен, площадь_подвала" +
                ", тип_мусоропровода, вентиляция, водоотведение, система_водостоков, газоснабжени" +
                "е, горячее_водоснаб, холодное_водоснаб, теплоснабжение, электроснабжение, мат_от" +
                "делки_фасада, форма_крыши, утепляющие_слои_чердачных_перекрытий, мат_окон, мат_с" +
                "ети_отопления, мат_теплоизоляции_сети FROM МКД WHERE (код_МКД = @код_МКД)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@адрес", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "адрес", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@кол_жил_пом", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "кол_жил_пом", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@состояние_МКД", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "состояние_МКД", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@детская_площадка", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "детская_площадка", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@спортивная_площадка", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "спортивная_площадка", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@тип_управления", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "тип_управления", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ОКТМО", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОКТМО", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@УК", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "УК", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@кадастровый_номер", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "кадастровый_номер", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@год_постройки", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "год_постройки", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@год_ВДВУ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "год_ВДВУ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@тип_дома", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "тип_дома", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@кол_этажей", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "кол_этажей", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@кол_подъездов", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "кол_подъездов", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@кол_лифтов", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "кол_лифтов", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@площадь_жил_пом", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "площадь_жил_пом", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@площадь_нежил_пом", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "площадь_нежил_пом", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@площадь_ПВСОИ", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "площадь_ПВСОИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@площадь_зем_участка", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 4, "площадь_зем_участка", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@фундамент", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "фундамент", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@тип_перекрытий", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "тип_перекрытий", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@мат_несущих_стен", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "мат_несущих_стен", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@площадь_подвала", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "площадь_подвала", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@тип_мусоропровода", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "тип_мусоропровода", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@вентиляция", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "вентиляция", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@водоотведение", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "водоотведение", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@система_водостоков", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "система_водостоков", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@газоснабжение", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "газоснабжение", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@горячее_водоснаб", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "горячее_водоснаб", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@холодное_водоснаб", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "холодное_водоснаб", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@теплоснабжение", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "теплоснабжение", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@электроснабжение", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "электроснабжение", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@мат_отделки_фасада", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "мат_отделки_фасада", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@форма_крыши", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "форма_крыши", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@утепляющие_слои_чердачных_перекрытий", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "утепляющие_слои_чердачных_перекрытий", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@мат_окон", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "мат_окон", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@мат_сети_отопления", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "мат_сети_отопления", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@мат_теплоизоляции_сети", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "мат_теплоизоляции_сети", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_код_МКД", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "код_МКД", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_кол_жил_пом", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "кол_жил_пом", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_кол_жил_пом", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "кол_жил_пом", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_состояние_МКД", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "состояние_МКД", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_детская_площадка", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "детская_площадка", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_детская_площадка", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "детская_площадка", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_спортивная_площадка", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "спортивная_площадка", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_спортивная_площадка", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "спортивная_площадка", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_тип_управления", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "тип_управления", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ОКТМО", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОКТМО", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_УК", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "УК", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_УК", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "УК", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_кадастровый_номер", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "кадастровый_номер", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_кадастровый_номер", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "кадастровый_номер", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_год_постройки", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "год_постройки", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_год_ВДВУ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "год_ВДВУ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_год_ВДВУ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "год_ВДВУ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_тип_дома", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "тип_дома", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_кол_этажей", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "кол_этажей", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_кол_подъездов", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "кол_подъездов", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_кол_лифтов", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "кол_лифтов", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_площадь_жил_пом", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "площадь_жил_пом", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_площадь_жил_пом", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "площадь_жил_пом", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_площадь_нежил_пом", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "площадь_нежил_пом", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_площадь_нежил_пом", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "площадь_нежил_пом", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_площадь_ПВСОИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "площадь_ПВСОИ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_площадь_ПВСОИ", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "площадь_ПВСОИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_площадь_зем_участка", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "площадь_зем_участка", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_площадь_зем_участка", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 4, "площадь_зем_участка", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_фундамент", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "фундамент", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_фундамент", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "фундамент", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_тип_перекрытий", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "тип_перекрытий", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_тип_перекрытий", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "тип_перекрытий", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_мат_несущих_стен", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "мат_несущих_стен", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_мат_несущих_стен", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "мат_несущих_стен", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_площадь_подвала", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "площадь_подвала", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_площадь_подвала", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "площадь_подвала", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_тип_мусоропровода", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "тип_мусоропровода", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_тип_мусоропровода", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "тип_мусоропровода", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_вентиляция", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "вентиляция", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_вентиляция", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "вентиляция", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_водоотведение", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "водоотведение", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_водоотведение", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "водоотведение", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_система_водостоков", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "система_водостоков", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_система_водостоков", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "система_водостоков", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_газоснабжение", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "газоснабжение", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_газоснабжение", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "газоснабжение", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_горячее_водоснаб", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "горячее_водоснаб", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_горячее_водоснаб", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "горячее_водоснаб", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_холодное_водоснаб", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "холодное_водоснаб", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_холодное_водоснаб", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "холодное_водоснаб", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_теплоснабжение", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "теплоснабжение", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_теплоснабжение", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "теплоснабжение", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_электроснабжение", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "электроснабжение", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_электроснабжение", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "электроснабжение", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_мат_отделки_фасада", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "мат_отделки_фасада", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_мат_отделки_фасада", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "мат_отделки_фасада", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_форма_крыши", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "форма_крыши", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_форма_крыши", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "форма_крыши", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_утепляющие_слои_чердачных_перекрытий", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "утепляющие_слои_чердачных_перекрытий", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_утепляющие_слои_чердачных_перекрытий", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "утепляющие_слои_чердачных_перекрытий", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_мат_окон", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "мат_окон", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_мат_окон", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "мат_окон", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_мат_сети_отопления", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "мат_сети_отопления", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_мат_сети_отопления", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "мат_сети_отопления", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_мат_теплоизоляции_сети", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "мат_теплоизоляции_сети", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_мат_теплоизоляции_сети", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "мат_теплоизоляции_сети", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@код_МКД", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "код_МКД", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MonitoringSystem.Properties.Settings.Default.MonitoringSystemDBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT код_МКД, адрес, кол_жил_пом, состояние_МКД, детская_площадка, спортивная_площадка, тип_управления, ОКТМО, УК, кадастровый_номер, год_постройки, год_ВДВУ, тип_дома, кол_этажей, кол_подъездов, кол_лифтов, площадь_жил_пом, площадь_нежил_пом, площадь_ПВСОИ, площадь_зем_участка, фундамент, тип_перекрытий, мат_несущих_стен, площадь_подвала, тип_мусоропровода, вентиляция, водоотведение, система_водостоков, газоснабжение, горячее_водоснаб, холодное_водоснаб, теплоснабжение, электроснабжение, мат_отделки_фасада, форма_крыши, утепляющие_слои_чердачных_перекрытий, мат_окон, мат_сети_отопления, мат_теплоизоляции_сети FROM dbo.МКД";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT код_МКД, адрес, кол_жил_пом, состояние_МКД, детская_площадка, спортивная_площадка, тип_управления, ОКТМО, УК, кадастровый_номер, год_постройки, год_ВДВУ, тип_дома, кол_этажей, кол_подъездов, кол_лифтов, площадь_жил_пом, площадь_нежил_пом, площадь_ПВСОИ, площадь_зем_участка, фундамент, тип_перекрытий, мат_несущих_стен, площадь_подвала, тип_мусоропровода, вентиляция, водоотведение, система_водостоков, газоснабжение, горячее_водоснаб, холодное_водоснаб, теплоснабжение, электроснабжение, мат_отделки_фасада, форма_крыши, утепляющие_слои_чердачных_перекрытий, мат_окон, мат_сети_отопления, мат_теплоизоляции_сети FROM dbo.МКД where адрес LIKE '%@adress%'";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MonitoringSystemDBDataSet.МКДDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MonitoringSystemDBDataSet.МКДDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MonitoringSystemDBDataSet.МКДDataTable dataTable = new MonitoringSystemDBDataSet.МКДDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(MonitoringSystemDBDataSet.МКДDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MonitoringSystemDBDataSet.МКДDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MonitoringSystemDBDataSet dataSet) {
            return this.Adapter.Update(dataSet, "МКД");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_код_МКД, 
                    global::System.Nullable<short> Original_кол_жил_пом, 
                    int Original_состояние_МКД, 
                    string Original_детская_площадка, 
                    string Original_спортивная_площадка, 
                    int Original_тип_управления, 
                    string Original_ОКТМО, 
                    global::System.Nullable<int> Original_УК, 
                    string Original_кадастровый_номер, 
                    string Original_год_постройки, 
                    string Original_год_ВДВУ, 
                    string Original_тип_дома, 
                    byte Original_кол_этажей, 
                    byte Original_кол_подъездов, 
                    byte Original_кол_лифтов, 
                    global::System.Nullable<decimal> Original_площадь_жил_пом, 
                    global::System.Nullable<decimal> Original_площадь_нежил_пом, 
                    global::System.Nullable<decimal> Original_площадь_ПВСОИ, 
                    global::System.Nullable<decimal> Original_площадь_зем_участка, 
                    string Original_фундамент, 
                    string Original_тип_перекрытий, 
                    string Original_мат_несущих_стен, 
                    global::System.Nullable<decimal> Original_площадь_подвала, 
                    string Original_тип_мусоропровода, 
                    string Original_вентиляция, 
                    string Original_водоотведение, 
                    string Original_система_водостоков, 
                    string Original_газоснабжение, 
                    string Original_горячее_водоснаб, 
                    string Original_холодное_водоснаб, 
                    string Original_теплоснабжение, 
                    string Original_электроснабжение, 
                    string Original_мат_отделки_фасада, 
                    string Original_форма_крыши, 
                    string Original_утепляющие_слои_чердачных_перекрытий, 
                    string Original_мат_окон, 
                    string Original_мат_сети_отопления, 
                    string Original_мат_теплоизоляции_сети) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_код_МКД));
            if ((Original_кол_жил_пом.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((short)(Original_кол_жил_пом.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_состояние_МКД));
            if ((Original_детская_площадка == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_детская_площадка));
            }
            if ((Original_спортивная_площадка == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_спортивная_площадка));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_тип_управления));
            if ((Original_ОКТМО == null)) {
                throw new global::System.ArgumentNullException("Original_ОКТМО");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_ОКТМО));
            }
            if ((Original_УК.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((int)(Original_УК.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_кадастровый_номер == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_кадастровый_номер));
            }
            if ((Original_год_постройки == null)) {
                throw new global::System.ArgumentNullException("Original_год_постройки");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_год_постройки));
            }
            if ((Original_год_ВДВУ == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_год_ВДВУ));
            }
            if ((Original_тип_дома == null)) {
                throw new global::System.ArgumentNullException("Original_тип_дома");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_тип_дома));
            }
            this.Adapter.DeleteCommand.Parameters[18].Value = ((byte)(Original_кол_этажей));
            this.Adapter.DeleteCommand.Parameters[19].Value = ((byte)(Original_кол_подъездов));
            this.Adapter.DeleteCommand.Parameters[20].Value = ((byte)(Original_кол_лифтов));
            if ((Original_площадь_жил_пом.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((decimal)(Original_площадь_жил_пом.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_площадь_нежил_пом.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((decimal)(Original_площадь_нежил_пом.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_площадь_ПВСОИ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((decimal)(Original_площадь_ПВСОИ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_площадь_зем_участка.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((decimal)(Original_площадь_зем_участка.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_фундамент == null)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_фундамент));
            }
            if ((Original_тип_перекрытий == null)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_тип_перекрытий));
            }
            if ((Original_мат_несущих_стен == null)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_мат_несущих_стен));
            }
            if ((Original_площадь_подвала.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((decimal)(Original_площадь_подвала.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_тип_мусоропровода == null)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((string)(Original_тип_мусоропровода));
            }
            if ((Original_вентиляция == null)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((string)(Original_вентиляция));
            }
            if ((Original_водоотведение == null)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((string)(Original_водоотведение));
            }
            if ((Original_система_водостоков == null)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((string)(Original_система_водостоков));
            }
            if ((Original_газоснабжение == null)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((string)(Original_газоснабжение));
            }
            if ((Original_горячее_водоснаб == null)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((string)(Original_горячее_водоснаб));
            }
            if ((Original_холодное_водоснаб == null)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((string)(Original_холодное_водоснаб));
            }
            if ((Original_теплоснабжение == null)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((string)(Original_теплоснабжение));
            }
            if ((Original_электроснабжение == null)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((string)(Original_электроснабжение));
            }
            if ((Original_мат_отделки_фасада == null)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((string)(Original_мат_отделки_фасада));
            }
            if ((Original_форма_крыши == null)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((string)(Original_форма_крыши));
            }
            if ((Original_утепляющие_слои_чердачных_перекрытий == null)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((string)(Original_утепляющие_слои_чердачных_перекрытий));
            }
            if ((Original_мат_окон == null)) {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[62].Value = ((string)(Original_мат_окон));
            }
            if ((Original_мат_сети_отопления == null)) {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[64].Value = ((string)(Original_мат_сети_отопления));
            }
            if ((Original_мат_теплоизоляции_сети == null)) {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[66].Value = ((string)(Original_мат_теплоизоляции_сети));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string адрес, 
                    global::System.Nullable<short> кол_жил_пом, 
                    int состояние_МКД, 
                    string детская_площадка, 
                    string спортивная_площадка, 
                    int тип_управления, 
                    string ОКТМО, 
                    global::System.Nullable<int> УК, 
                    string кадастровый_номер, 
                    string год_постройки, 
                    string год_ВДВУ, 
                    string тип_дома, 
                    byte кол_этажей, 
                    byte кол_подъездов, 
                    byte кол_лифтов, 
                    global::System.Nullable<decimal> площадь_жил_пом, 
                    global::System.Nullable<decimal> площадь_нежил_пом, 
                    global::System.Nullable<decimal> площадь_ПВСОИ, 
                    global::System.Nullable<decimal> площадь_зем_участка, 
                    string фундамент, 
                    string тип_перекрытий, 
                    string мат_несущих_стен, 
                    global::System.Nullable<decimal> площадь_подвала, 
                    string тип_мусоропровода, 
                    string вентиляция, 
                    string водоотведение, 
                    string система_водостоков, 
                    string газоснабжение, 
                    string горячее_водоснаб, 
                    string холодное_водоснаб, 
                    string теплоснабжение, 
                    string электроснабжение, 
                    string мат_отделки_фасада, 
                    string форма_крыши, 
                    string утепляющие_слои_чердачных_перекрытий, 
                    string мат_окон, 
                    string мат_сети_отопления, 
                    string мат_теплоизоляции_сети) {
            if ((адрес == null)) {
                throw new global::System.ArgumentNullException("адрес");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(адрес));
            }
            if ((кол_жил_пом.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((short)(кол_жил_пом.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(состояние_МКД));
            if ((детская_площадка == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(детская_площадка));
            }
            if ((спортивная_площадка == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(спортивная_площадка));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(тип_управления));
            if ((ОКТМО == null)) {
                throw new global::System.ArgumentNullException("ОКТМО");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(ОКТМО));
            }
            if ((УК.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(УК.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((кадастровый_номер == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(кадастровый_номер));
            }
            if ((год_постройки == null)) {
                throw new global::System.ArgumentNullException("год_постройки");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(год_постройки));
            }
            if ((год_ВДВУ == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(год_ВДВУ));
            }
            if ((тип_дома == null)) {
                throw new global::System.ArgumentNullException("тип_дома");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(тип_дома));
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((byte)(кол_этажей));
            this.Adapter.InsertCommand.Parameters[13].Value = ((byte)(кол_подъездов));
            this.Adapter.InsertCommand.Parameters[14].Value = ((byte)(кол_лифтов));
            if ((площадь_жил_пом.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(площадь_жил_пом.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((площадь_нежил_пом.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(площадь_нежил_пом.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((площадь_ПВСОИ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(площадь_ПВСОИ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((площадь_зем_участка.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((decimal)(площадь_зем_участка.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((фундамент == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(фундамент));
            }
            if ((тип_перекрытий == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(тип_перекрытий));
            }
            if ((мат_несущих_стен == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(мат_несущих_стен));
            }
            if ((площадь_подвала.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((decimal)(площадь_подвала.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((тип_мусоропровода == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(тип_мусоропровода));
            }
            if ((вентиляция == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(вентиляция));
            }
            if ((водоотведение == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(водоотведение));
            }
            if ((система_водостоков == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(система_водостоков));
            }
            if ((газоснабжение == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(газоснабжение));
            }
            if ((горячее_водоснаб == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(горячее_водоснаб));
            }
            if ((холодное_водоснаб == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(холодное_водоснаб));
            }
            if ((теплоснабжение == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(теплоснабжение));
            }
            if ((электроснабжение == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(электроснабжение));
            }
            if ((мат_отделки_фасада == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(мат_отделки_фасада));
            }
            if ((форма_крыши == null)) {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(форма_крыши));
            }
            if ((утепляющие_слои_чердачных_перекрытий == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(утепляющие_слои_чердачных_перекрытий));
            }
            if ((мат_окон == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(мат_окон));
            }
            if ((мат_сети_отопления == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(мат_сети_отопления));
            }
            if ((мат_теплоизоляции_сети == null)) {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(мат_теплоизоляции_сети));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string адрес, 
                    global::System.Nullable<short> кол_жил_пом, 
                    int состояние_МКД, 
                    string детская_площадка, 
                    string спортивная_площадка, 
                    int тип_управления, 
                    string ОКТМО, 
                    global::System.Nullable<int> УК, 
                    string кадастровый_номер, 
                    string год_постройки, 
                    string год_ВДВУ, 
                    string тип_дома, 
                    byte кол_этажей, 
                    byte кол_подъездов, 
                    byte кол_лифтов, 
                    global::System.Nullable<decimal> площадь_жил_пом, 
                    global::System.Nullable<decimal> площадь_нежил_пом, 
                    global::System.Nullable<decimal> площадь_ПВСОИ, 
                    global::System.Nullable<decimal> площадь_зем_участка, 
                    string фундамент, 
                    string тип_перекрытий, 
                    string мат_несущих_стен, 
                    global::System.Nullable<decimal> площадь_подвала, 
                    string тип_мусоропровода, 
                    string вентиляция, 
                    string водоотведение, 
                    string система_водостоков, 
                    string газоснабжение, 
                    string горячее_водоснаб, 
                    string холодное_водоснаб, 
                    string теплоснабжение, 
                    string электроснабжение, 
                    string мат_отделки_фасада, 
                    string форма_крыши, 
                    string утепляющие_слои_чердачных_перекрытий, 
                    string мат_окон, 
                    string мат_сети_отопления, 
                    string мат_теплоизоляции_сети, 
                    int Original_код_МКД, 
                    global::System.Nullable<short> Original_кол_жил_пом, 
                    int Original_состояние_МКД, 
                    string Original_детская_площадка, 
                    string Original_спортивная_площадка, 
                    int Original_тип_управления, 
                    string Original_ОКТМО, 
                    global::System.Nullable<int> Original_УК, 
                    string Original_кадастровый_номер, 
                    string Original_год_постройки, 
                    string Original_год_ВДВУ, 
                    string Original_тип_дома, 
                    byte Original_кол_этажей, 
                    byte Original_кол_подъездов, 
                    byte Original_кол_лифтов, 
                    global::System.Nullable<decimal> Original_площадь_жил_пом, 
                    global::System.Nullable<decimal> Original_площадь_нежил_пом, 
                    global::System.Nullable<decimal> Original_площадь_ПВСОИ, 
                    global::System.Nullable<decimal> Original_площадь_зем_участка, 
                    string Original_фундамент, 
                    string Original_тип_перекрытий, 
                    string Original_мат_несущих_стен, 
                    global::System.Nullable<decimal> Original_площадь_подвала, 
                    string Original_тип_мусоропровода, 
                    string Original_вентиляция, 
                    string Original_водоотведение, 
                    string Original_система_водостоков, 
                    string Original_газоснабжение, 
                    string Original_горячее_водоснаб, 
                    string Original_холодное_водоснаб, 
                    string Original_теплоснабжение, 
                    string Original_электроснабжение, 
                    string Original_мат_отделки_фасада, 
                    string Original_форма_крыши, 
                    string Original_утепляющие_слои_чердачных_перекрытий, 
                    string Original_мат_окон, 
                    string Original_мат_сети_отопления, 
                    string Original_мат_теплоизоляции_сети, 
                    int код_МКД) {
            if ((адрес == null)) {
                throw new global::System.ArgumentNullException("адрес");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(адрес));
            }
            if ((кол_жил_пом.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((short)(кол_жил_пом.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(состояние_МКД));
            if ((детская_площадка == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(детская_площадка));
            }
            if ((спортивная_площадка == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(спортивная_площадка));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(тип_управления));
            if ((ОКТМО == null)) {
                throw new global::System.ArgumentNullException("ОКТМО");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(ОКТМО));
            }
            if ((УК.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(УК.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((кадастровый_номер == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(кадастровый_номер));
            }
            if ((год_постройки == null)) {
                throw new global::System.ArgumentNullException("год_постройки");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(год_постройки));
            }
            if ((год_ВДВУ == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(год_ВДВУ));
            }
            if ((тип_дома == null)) {
                throw new global::System.ArgumentNullException("тип_дома");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(тип_дома));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((byte)(кол_этажей));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((byte)(кол_подъездов));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((byte)(кол_лифтов));
            if ((площадь_жил_пом.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(площадь_жил_пом.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((площадь_нежил_пом.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(площадь_нежил_пом.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((площадь_ПВСОИ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(площадь_ПВСОИ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((площадь_зем_участка.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(площадь_зем_участка.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((фундамент == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(фундамент));
            }
            if ((тип_перекрытий == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(тип_перекрытий));
            }
            if ((мат_несущих_стен == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(мат_несущих_стен));
            }
            if ((площадь_подвала.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(площадь_подвала.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((тип_мусоропровода == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(тип_мусоропровода));
            }
            if ((вентиляция == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(вентиляция));
            }
            if ((водоотведение == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(водоотведение));
            }
            if ((система_водостоков == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(система_водостоков));
            }
            if ((газоснабжение == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(газоснабжение));
            }
            if ((горячее_водоснаб == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(горячее_водоснаб));
            }
            if ((холодное_водоснаб == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(холодное_водоснаб));
            }
            if ((теплоснабжение == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(теплоснабжение));
            }
            if ((электроснабжение == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(электроснабжение));
            }
            if ((мат_отделки_фасада == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(мат_отделки_фасада));
            }
            if ((форма_крыши == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(форма_крыши));
            }
            if ((утепляющие_слои_чердачных_перекрытий == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(утепляющие_слои_чердачных_перекрытий));
            }
            if ((мат_окон == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(мат_окон));
            }
            if ((мат_сети_отопления == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(мат_сети_отопления));
            }
            if ((мат_теплоизоляции_сети == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(мат_теплоизоляции_сети));
            }
            this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(Original_код_МКД));
            if ((Original_кол_жил_пом.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((short)(Original_кол_жил_пом.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[41].Value = ((int)(Original_состояние_МКД));
            if ((Original_детская_площадка == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_детская_площадка));
            }
            if ((Original_спортивная_площадка == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_спортивная_площадка));
            }
            this.Adapter.UpdateCommand.Parameters[46].Value = ((int)(Original_тип_управления));
            if ((Original_ОКТМО == null)) {
                throw new global::System.ArgumentNullException("Original_ОКТМО");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_ОКТМО));
            }
            if ((Original_УК.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((int)(Original_УК.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_кадастровый_номер == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Original_кадастровый_номер));
            }
            if ((Original_год_постройки == null)) {
                throw new global::System.ArgumentNullException("Original_год_постройки");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Original_год_постройки));
            }
            if ((Original_год_ВДВУ == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(Original_год_ВДВУ));
            }
            if ((Original_тип_дома == null)) {
                throw new global::System.ArgumentNullException("Original_тип_дома");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Original_тип_дома));
            }
            this.Adapter.UpdateCommand.Parameters[56].Value = ((byte)(Original_кол_этажей));
            this.Adapter.UpdateCommand.Parameters[57].Value = ((byte)(Original_кол_подъездов));
            this.Adapter.UpdateCommand.Parameters[58].Value = ((byte)(Original_кол_лифтов));
            if ((Original_площадь_жил_пом.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((decimal)(Original_площадь_жил_пом.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_площадь_нежил_пом.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[62].Value = ((decimal)(Original_площадь_нежил_пом.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((Original_площадь_ПВСОИ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[64].Value = ((decimal)(Original_площадь_ПВСОИ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((Original_площадь_зем_участка.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[66].Value = ((decimal)(Original_площадь_зем_участка.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Original_фундамент == null)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(Original_фундамент));
            }
            if ((Original_тип_перекрытий == null)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(Original_тип_перекрытий));
            }
            if ((Original_мат_несущих_стен == null)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(Original_мат_несущих_стен));
            }
            if ((Original_площадь_подвала.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[74].Value = ((decimal)(Original_площадь_подвала.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((Original_тип_мусоропровода == null)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[76].Value = ((string)(Original_тип_мусоропровода));
            }
            if ((Original_вентиляция == null)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[78].Value = ((string)(Original_вентиляция));
            }
            if ((Original_водоотведение == null)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[80].Value = ((string)(Original_водоотведение));
            }
            if ((Original_система_водостоков == null)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[82].Value = ((string)(Original_система_водостоков));
            }
            if ((Original_газоснабжение == null)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[84].Value = ((string)(Original_газоснабжение));
            }
            if ((Original_горячее_водоснаб == null)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[86].Value = ((string)(Original_горячее_водоснаб));
            }
            if ((Original_холодное_водоснаб == null)) {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[88].Value = ((string)(Original_холодное_водоснаб));
            }
            if ((Original_теплоснабжение == null)) {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[90].Value = ((string)(Original_теплоснабжение));
            }
            if ((Original_электроснабжение == null)) {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[92].Value = ((string)(Original_электроснабжение));
            }
            if ((Original_мат_отделки_фасада == null)) {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[94].Value = ((string)(Original_мат_отделки_фасада));
            }
            if ((Original_форма_крыши == null)) {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[96].Value = ((string)(Original_форма_крыши));
            }
            if ((Original_утепляющие_слои_чердачных_перекрытий == null)) {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[98].Value = ((string)(Original_утепляющие_слои_чердачных_перекрытий));
            }
            if ((Original_мат_окон == null)) {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[100].Value = ((string)(Original_мат_окон));
            }
            if ((Original_мат_сети_отопления == null)) {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[102].Value = ((string)(Original_мат_сети_отопления));
            }
            if ((Original_мат_теплоизоляции_сети == null)) {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[104].Value = ((string)(Original_мат_теплоизоляции_сети));
            }
            this.Adapter.UpdateCommand.Parameters[105].Value = ((int)(код_МКД));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string адрес, 
                    global::System.Nullable<short> кол_жил_пом, 
                    int состояние_МКД, 
                    string детская_площадка, 
                    string спортивная_площадка, 
                    int тип_управления, 
                    string ОКТМО, 
                    global::System.Nullable<int> УК, 
                    string кадастровый_номер, 
                    string год_постройки, 
                    string год_ВДВУ, 
                    string тип_дома, 
                    byte кол_этажей, 
                    byte кол_подъездов, 
                    byte кол_лифтов, 
                    global::System.Nullable<decimal> площадь_жил_пом, 
                    global::System.Nullable<decimal> площадь_нежил_пом, 
                    global::System.Nullable<decimal> площадь_ПВСОИ, 
                    global::System.Nullable<decimal> площадь_зем_участка, 
                    string фундамент, 
                    string тип_перекрытий, 
                    string мат_несущих_стен, 
                    global::System.Nullable<decimal> площадь_подвала, 
                    string тип_мусоропровода, 
                    string вентиляция, 
                    string водоотведение, 
                    string система_водостоков, 
                    string газоснабжение, 
                    string горячее_водоснаб, 
                    string холодное_водоснаб, 
                    string теплоснабжение, 
                    string электроснабжение, 
                    string мат_отделки_фасада, 
                    string форма_крыши, 
                    string утепляющие_слои_чердачных_перекрытий, 
                    string мат_окон, 
                    string мат_сети_отопления, 
                    string мат_теплоизоляции_сети, 
                    int Original_код_МКД, 
                    global::System.Nullable<short> Original_кол_жил_пом, 
                    int Original_состояние_МКД, 
                    string Original_детская_площадка, 
                    string Original_спортивная_площадка, 
                    int Original_тип_управления, 
                    string Original_ОКТМО, 
                    global::System.Nullable<int> Original_УК, 
                    string Original_кадастровый_номер, 
                    string Original_год_постройки, 
                    string Original_год_ВДВУ, 
                    string Original_тип_дома, 
                    byte Original_кол_этажей, 
                    byte Original_кол_подъездов, 
                    byte Original_кол_лифтов, 
                    global::System.Nullable<decimal> Original_площадь_жил_пом, 
                    global::System.Nullable<decimal> Original_площадь_нежил_пом, 
                    global::System.Nullable<decimal> Original_площадь_ПВСОИ, 
                    global::System.Nullable<decimal> Original_площадь_зем_участка, 
                    string Original_фундамент, 
                    string Original_тип_перекрытий, 
                    string Original_мат_несущих_стен, 
                    global::System.Nullable<decimal> Original_площадь_подвала, 
                    string Original_тип_мусоропровода, 
                    string Original_вентиляция, 
                    string Original_водоотведение, 
                    string Original_система_водостоков, 
                    string Original_газоснабжение, 
                    string Original_горячее_водоснаб, 
                    string Original_холодное_водоснаб, 
                    string Original_теплоснабжение, 
                    string Original_электроснабжение, 
                    string Original_мат_отделки_фасада, 
                    string Original_форма_крыши, 
                    string Original_утепляющие_слои_чердачных_перекрытий, 
                    string Original_мат_окон, 
                    string Original_мат_сети_отопления, 
                    string Original_мат_теплоизоляции_сети) {
            return this.Update(адрес, кол_жил_пом, состояние_МКД, детская_площадка, спортивная_площадка, тип_управления, ОКТМО, УК, кадастровый_номер, год_постройки, год_ВДВУ, тип_дома, кол_этажей, кол_подъездов, кол_лифтов, площадь_жил_пом, площадь_нежил_пом, площадь_ПВСОИ, площадь_зем_участка, фундамент, тип_перекрытий, мат_несущих_стен, площадь_подвала, тип_мусоропровода, вентиляция, водоотведение, система_водостоков, газоснабжение, горячее_водоснаб, холодное_водоснаб, теплоснабжение, электроснабжение, мат_отделки_фасада, форма_крыши, утепляющие_слои_чердачных_перекрытий, мат_окон, мат_сети_отопления, мат_теплоизоляции_сети, Original_код_МКД, Original_кол_жил_пом, Original_состояние_МКД, Original_детская_площадка, Original_спортивная_площадка, Original_тип_управления, Original_ОКТМО, Original_УК, Original_кадастровый_номер, Original_год_постройки, Original_год_ВДВУ, Original_тип_дома, Original_кол_этажей, Original_кол_подъездов, Original_кол_лифтов, Original_площадь_жил_пом, Original_площадь_нежил_пом, Original_площадь_ПВСОИ, Original_площадь_зем_участка, Original_фундамент, Original_тип_перекрытий, Original_мат_несущих_стен, Original_площадь_подвала, Original_тип_мусоропровода, Original_вентиляция, Original_водоотведение, Original_система_водостоков, Original_газоснабжение, Original_горячее_водоснаб, Original_холодное_водоснаб, Original_теплоснабжение, Original_электроснабжение, Original_мат_отделки_фасада, Original_форма_крыши, Original_утепляющие_слои_чердачных_перекрытий, Original_мат_окон, Original_мат_сети_отопления, Original_мат_теплоизоляции_сети, Original_код_МКД);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private МКДTableAdapter _мКДTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public МКДTableAdapter МКДTableAdapter {
            get {
                return this._мКДTableAdapter;
            }
            set {
                this._мКДTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._мКДTableAdapter != null) 
                            && (this._мКДTableAdapter.Connection != null))) {
                    return this._мКДTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._мКДTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateUpdatedRows(MonitoringSystemDBDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._мКДTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.МКД.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._мКДTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateInsertedRows(MonitoringSystemDBDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._мКДTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.МКД.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._мКДTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateDeletedRows(MonitoringSystemDBDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._мКДTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.МКД.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._мКДTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public virtual int UpdateAll(MonitoringSystemDBDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._мКДTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._мКДTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager не содержит сведений о подключении. Укажите для каждого адапт" +
                        "ера таблицы TableAdapterManager допустимый экземпляр адаптера таблицы.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("Не удается начать транзакцию. Текущее соединение данных не поддерживает транзакци" +
                        "и или текущее состояние не позволяет начать транзакцию.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._мКДTableAdapter != null)) {
                    revertConnections.Add(this._мКДTableAdapter, this._мКДTableAdapter.Connection);
                    this._мКДTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._мКДTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._мКДTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._мКДTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._мКДTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._мКДTableAdapter != null)) {
                    this._мКДTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._мКДTableAdapter]));
                    this._мКДTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591